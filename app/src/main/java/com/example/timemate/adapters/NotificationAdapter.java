package com.example.timemate.adapters;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.timemate.R;
import com.example.timemate.data.model.SharedSchedule;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

/**
 * ÏïåÎ¶º Î™©Î°ù Ïñ¥ÎåëÌÑ∞
 */
public class NotificationAdapter extends RecyclerView.Adapter<NotificationAdapter.NotificationViewHolder> {
    
    private List<SharedSchedule> notifications;
    private OnNotificationActionListener listener;
    
    public interface OnNotificationActionListener {
        void onNotificationAction(SharedSchedule notification, String action);
    }
    
    public NotificationAdapter(List<SharedSchedule> notifications, OnNotificationActionListener listener) {
        this.notifications = notifications;
        this.listener = listener;
    }
    
    @NonNull
    @Override
    public NotificationViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.item_notification, parent, false);
        return new NotificationViewHolder(view);
    }
    
    @Override
    public void onBindViewHolder(@NonNull NotificationViewHolder holder, int position) {
        SharedSchedule notification = notifications.get(position);
        holder.bind(notification, listener);
    }
    
    @Override
    public int getItemCount() {
        return notifications.size();
    }
    
    public void updateNotifications(List<SharedSchedule> newNotifications) {
        this.notifications = newNotifications;
        notifyDataSetChanged();
    }
    
    static class NotificationViewHolder extends RecyclerView.ViewHolder {
        
        private TextView textNotificationTitle;
        private TextView textNotificationMessage;
        private TextView textNotificationTime;
        private Button btnAccept;
        private Button btnReject;
        
        public NotificationViewHolder(@NonNull View itemView) {
            super(itemView);
            
            textNotificationTitle = itemView.findViewById(R.id.textNotificationTitle);
            textNotificationMessage = itemView.findViewById(R.id.textNotificationMessage);
            textNotificationTime = itemView.findViewById(R.id.textNotificationTime);
            btnAccept = itemView.findViewById(R.id.btnAccept);
            btnReject = itemView.findViewById(R.id.btnReject);
        }
        
        public void bind(SharedSchedule notification, OnNotificationActionListener listener) {
            // Ï†úÎ™© ÏÑ§Ï†ï
            textNotificationTitle.setText("üìÖ ÏùºÏ†ï Ï¥àÎåÄ");
            
            // Î©îÏãúÏßÄ ÏÑ§Ï†ï
            String message = String.format("%sÎãòÏù¥ '%s' ÏùºÏ†ïÏóê Ï¥àÎåÄÌñàÏäµÎãàÎã§",
                    notification.creatorNickname != null ? notification.creatorNickname : notification.creatorUserId,
                    notification.title != null ? notification.title : "ÏùºÏ†ï");
            textNotificationMessage.setText(message);

            // ÏãúÍ∞Ñ ÏÑ§Ï†ï
            if (notification.createdAt > 0) {
                SimpleDateFormat timeFormat = new SimpleDateFormat("MM/dd HH:mm", Locale.KOREAN);
                textNotificationTime.setText(timeFormat.format(new Date(notification.createdAt)));
            } else {
                textNotificationTime.setText("Î∞©Í∏à Ï†Ñ");
            }
            
            // Î≤ÑÌäº Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï
            btnAccept.setOnClickListener(v -> {
                if (listener != null) {
                    listener.onNotificationAction(notification, "accept");
                }
            });
            
            btnReject.setOnClickListener(v -> {
                if (listener != null) {
                    listener.onNotificationAction(notification, "reject");
                }
            });
        }
    }
}
